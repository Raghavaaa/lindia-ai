# Environment Configuration Example
# Copy this file to .env and fill in your values
# NEVER commit .env to version control

# =============================================================================
# RUNTIME CONFIGURATION
# =============================================================================

# Runtime mode: LOCAL (testing with mocks) or PROD (real providers)
RUNTIME_MODE=LOCAL

# Logging level
LOG_LEVEL=INFO

# =============================================================================
# AI PROVIDER CREDENTIALS
# =============================================================================

# External AI Engine (currently deployed service)
AI_ENGINE_URL=https://lindia-ai-production.up.railway.app

# OpenAI API (optional)
# OPENAI_API_KEY=sk-...

# DeepSeek API (optional)
# DEEPSEEK_API_KEY=sk-...

# Groq API (optional - fast inference)
# GROQ_API_KEY=gsk_...

# Anthropic API (optional)
# ANTHROPIC_API_KEY=sk-ant-...

# HuggingFace API (optional)
# HUGGINGFACE_API_KEY=hf_...

# =============================================================================
# AUTHENTICATION
# =============================================================================

# API Key for endpoint authentication
API_SECRET_KEY=your-secret-api-key-here

# JWT Secret (optional, for token-based auth)
# JWT_SECRET=your-jwt-secret-here

# =============================================================================
# DATABASE
# =============================================================================

# Database URL (defaults to SQLite if not set)
# For PostgreSQL: postgresql://user:password@host:port/dbname
# For SQLite: sqlite:///./legalindia.db
# DATABASE_URL=sqlite:///./legalindia.db

# Railway environment detection
# RAILWAY_ENVIRONMENT=production

# =============================================================================
# CACHING
# =============================================================================

# Cache backend: memory or redis
CACHE_BACKEND=memory

# Cache TTL in seconds
CACHE_TTL_SECONDS=300

# Redis URL (if using Redis backend)
# REDIS_URL=redis://localhost:6379/0

# Enable/disable caching
ENABLE_CACHING=true

# =============================================================================
# RATE LIMITING
# =============================================================================

# Enable rate limiting
RATE_LIMIT_ENABLED=true

# Max requests per window
RATE_LIMIT_REQUESTS=100

# Time window in seconds
RATE_LIMIT_WINDOW_SECONDS=60

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Enable local model inference (requires heavy dependencies)
# Only enable if you need on-host model execution
ENABLE_LOCAL_MODEL=false

# Enable RAG (Retrieval Augmented Generation)
ENABLE_RAG=false

# =============================================================================
# OBSERVABILITY
# =============================================================================

# Sentry DSN for error tracking (optional)
# SENTRY_DSN=https://...@sentry.io/...

# =============================================================================
# DEPLOYMENT (Railway/Platform-specific)
# =============================================================================

# Port (usually set by platform)
# PORT=8000

# Workers (for gunicorn)
# WEB_CONCURRENCY=4

# =============================================================================
# NOTES
# =============================================================================

# For LOCAL mode (testing):
#   - Mock provider will be used
#   - No external API keys required
#   - Good for development and testing

# For PROD mode (production):
#   - Configure at least one provider (AI_ENGINE_URL or OPENAI_API_KEY, etc.)
#   - Set secure API_SECRET_KEY
#   - Configure database for persistence
#   - Enable caching and rate limiting

# Security:
#   - Never commit this file with real secrets
#   - Rotate API keys regularly
#   - Use environment-specific secrets in deployment platforms
#   - Review and remove unused provider credentials

