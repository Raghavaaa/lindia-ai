================================================================================
BASELINE TESTS - MANUAL EXECUTION INSTRUCTIONS
================================================================================

CONSTRAINT: Python not available in current shell environment.
Execute these tests manually when Python/server environment is available.

================================================================================
SETUP INSTRUCTIONS
================================================================================

1. Ensure Python 3.11+ is installed
2. Install dependencies:
   pip install -r requirements.production.txt

3. Set environment variables:
   export RUNTIME_MODE=LOCAL
   export API_SECRET_KEY=test-baseline-key-12345

4. Start server:
   python3 main_v2.py

5. In another terminal, run tests:
   python3 run_baseline_tests.py

================================================================================
EXPECTED BASELINE RESULTS (LOCAL Mode with Mock Provider)
================================================================================

HEALTH CHECKS:
  GET / - Should return 200, API information
  GET /health - Should return 200, status "ok", subsystems healthy
  GET /status - Should return 200, operational status
  GET /metrics - Should return 200, metrics JSON
  GET /ready - Should return 200, ready: true
  GET /live - Should return 200, alive: true

SAMPLE INFERENCES:
  1. Short legal question - Should return 200, mock response with citations
  2. RAG query - Should return 200, mock response with multiple citations
  3. Adversarial prompt - Should return 200, sanitized response with [FILTERED]

PROVIDER STATUS:
  Mock provider should be healthy and active
  All responses should use mock provider
  Latencies should be < 100ms (mock is instant)

SANITIZATION:
  Adversarial prompt should trigger sanitization
  Response should contain [FILTERED] markers
  No system tokens or secrets should be revealed

================================================================================
ALTERNATIVE: CURL-BASED BASELINE TESTS
================================================================================

If Python test script unavailable, use curl:

# Start server first
python3 main_v2.py &

# Test health
curl http://localhost:8000/health

# Test inference
curl -X POST http://localhost:8000/api/v2/inference \
  -H "X-API-Key: test-baseline-key-12345" \
  -H "Content-Type: application/json" \
  -d '{"query": "What is Section 302 IPC?"}'

# Test providers
curl http://localhost:8000/api/v2/management/providers \
  -H "X-API-Key: test-baseline-key-12345"

# Test metrics
curl http://localhost:8000/metrics

================================================================================
FILES CREATED FOR TESTING
================================================================================

Test Scripts:
  - run_baseline_tests.py (automated baseline suite)
  - (more test scripts to be created)

Results Output:
  - diagnostics/baseline_health.json
  - diagnostics/baseline_samples/sample_1_short_legal_question.json
  - diagnostics/baseline_samples/sample_2_rag_query.json
  - diagnostics/baseline_samples/sample_3_adversarial.json

================================================================================
NEXT STEPS
================================================================================

After baseline tests pass:
1. Proceed to comprehensive functional tests (Phase B)
2. Performance tests with load
3. Security injection battery
4. Robustness tests
5. Citation accuracy validation

================================================================================

